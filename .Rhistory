x <- matrix(1:6, 2,3)
x
ncol(x)
for
(i in x)
{}
x <- rbinom(1,1,0.5)
x
x <- rbinom(1,1,0.5)
x
for(i in 1:6) {x <- rbinom(1,1,0.5)
]
}
for(i in 1:6) {x <- rbinom(1,1,0.5)}
for(i in 1:6) { print(rbinom(1,1,0.5))}
for(i in 1:6) { print(rbinom(1,1,0.5))}
for(i in 1:6) { print(rbinom(1,1,0.5))}
for(i in 1:6) { print(rbinom(1,1,0.5))}
add2 <- function(x,y){
x + y
}
add2(3,5)
use <- x < 10
print(x)
y <- 7
y[x]
columnmean <- function(y) {
nc <- ncol(y)
means <- numeric(nc)
for(i in i:nc) {
means[i] <- mean(y[, i])
}
means
}
hw1_data <- read.csv("~/GitHub/datasciencecoursera/hw1_data.csv")
View(hw1_data)
columnmean <- function(y) {
nc <- ncol(y)
means <- numeric(nc)
for(i in i:nc) {
means[i] <- mean(y[, i])
}
means
}
columnmean(hw1_data)
hw1_data[1]
columnmean(hw1_data)
columnmean <- function(y, removeNA = TRUE) {
nc <- ncol(y)
means <- numeric(nc)
for(i in i:nc) {
means[i] <- mean(y[, i], na.rm = removeNA)
}
means
}
columnmean(hw1_data)
columnmean <- function(y, removeNA = TRUE) {
nc <- ncol(y)
means <- numeric(nc)
for(i in i:nc) {
means[i] <- mean(y[, i], na.rm = removeNA)
}
means
}
columnmean(hw1_data)
columnmean <- function(y, removeNA = TRUE) {
nc <- ncol(y)
means <- numeric(nc)
for(i in i:nc) {
means[i] <- mean(y[, i], na.rm = removeNA)7
}
means
}
columnmean <- function(y, removeNA = TRUE) {
nc <- ncol(y)
means <- numeric(nc)
means
}
columnmean(hw1_data)
columnmean <- function(y, removeNA = TRUE) {
nc <- ncol(y)
means <- numeric(nc)
for(i in i:nc) {
means[i] <-  i #mean(y[, i], na.rm = removeNA)
}
means
}
columnmean(hw1_data)
columnmean <- function(y, removeNA = TRUE) {
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc) {
means[i] <-  i #mean(y[, i], na.rm = removeNA)
}
means
}
columnmean(hw1_data)
columnmean <- function(y, removeNA = TRUE) {
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc) {
means[i] <-  mean(y[, i], na.rm = removeNA)
}
means
}
columnmean(hw1_data)
columnmean(hw1_data, FALSE)
my <- rnorm(100)
sd(my)
my[1]
my[3]
sd(my)
my[31]
num[1:100]
1:100
print(my)
lm(my, y - x, model = FALSE, 1:100)
lm(y - x, my, model = FALSE, 1:100)
lm(y - x, my, 1:100, model = FALSE)
lm(y - x, my, 1:100)
args(lm)
x <- 1:10
if(x>5) x <- 0
x <- 1:10
if(x >5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
set.seed(20)
x <- rnorm(100)
e <- rnorm(100, 0 ,2)
y <- 0.5 + 2 * x + e
ssummary(y)
summary(y)
plot(x,y)
set.seed(1)
rpois(5, 2)
set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
library(httr)
install.packages("httr")
library(httr)
oauth_endpoints("github")
install.packages("knitr")
setwd("~/GitHub/RepData_PeerAssessment1")
setwd("~/GitHub/RepData_PeerAssessment1")
setwd("~/GitHub/RepData_PeerAssessment1")
file_path <- "activity.csv"
data = read.table(file = file_path,header=T, quote="\"", sep=",")
View(data)
data = read.csv("activity.csv", header = T)
View(data)
rankall <- function(outcome, num = "best") {
source('~/GitHub/ProgrammingAssignment3/rankall.R')
View(data)
View(data)
View(data)
setwd("~/GitHub/RepData_PeerAssessment1")
data = read.csv("activity.csv", header = T)
View(data)
data = read.csv("activity.csv", header = T)
```
setwd("~/GitHub/RepData_PeerAssessment1")
data = read.csv("activity.csv", header = T)
View(data)
data = data(na.rm = TRUE)
setwd("~/GitHub/RepData_PeerAssessment1")
data = read.csv("activity.csv", header = T)
View(data)
mean(data$steps)
mean(data[,data$steps])
View(data)
data_reduced = aggregate(data$steps,by=list(data$date),FUN=sum)
View(data_reduced)
data_reduced = aggregate(data$steps,by=list(data$date),FUN=sum,na.rm=TRUE)
View(data_reduced)
View(data)
data$date=as.Date(data$date)
data_reduced = aggregate(data$steps,by=list(data$date),FUN=sum,na.rm=TRUE)
hist(data_reduced$steps, main = paste("Global Active Power"), col="red", xlab="Global Active Power (kilowatts)")
data$date=as.Date(data$date)
data_reduced = aggregate(data$steps,by=list(data$date),FUN=sum,na.rm=TRUE)
hist(data_reduced$x, main = paste("Global Active Power"), col="red", xlab="Global Active Power (kilowatts)")
hist(data_reduced$x, main = paste("Histogram of the total number of steps taken each day"), xlab="Steps")
hist(data_reduced$x, breaks=20, main = paste("Histogram of the total number of steps taken each day"), xlab="Steps")
